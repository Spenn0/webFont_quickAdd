<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope) {
  /* widget controller */
  var c = this;
//	c.splitJoinUrl = splitJoinUrl;
	c.formData = {};
	
	newName = '';

//$scope.$watch('c.formData', function(newVal){
//	console.log(c.formData);
//});
	
	
	
	function selectPortal(portal){
		console.log(portal);
	
		var id = portal.sys_id;
		console.log(id);

		var theme = portal.sp_theme;
		c.data.id = id;
		c.data.theme = theme;
		
	// *extra cred* you could make a business rule that
	// authenticates the url that is pasted in the url field.		
	}

	c.importUrl = function(formData) {
		var newName = '';
		var metaSubstring = '';
		var newSubstringArray = '';
		var nameArray = [];
		var finalNameArray = [];
		
		
//		console.log("THIS IS FORM DATA: "+ formData)
		
//================================================
		// vv THIS FUNCTION vv TRIMS THE URL INTO THE BATCH OF 
		// FONT FAMILY NAMES (FROM GOOGLE FONTS) THAT WE WILL  
		// TRIM AND REFINE IN THE FOLLOWING FUNCTIONS
	
			if (c.formData.url.indexOf("family=")) {
			metaSubstring = c.formData.url.substring(
				c.formData.url.indexOf("family="),
				c.formData.url.lastIndexOf("&") +1
		)
			
				console.log("THIS IS THE METASUBSTRING: " + metaSubstring)
			}
	
			newSubstringArray = metaSubstring.toString().split("family=")

				
//				console.log("newSUBSTRING: " + newSubstringArray)
		
//================================================
		// vv THIS FUNCTION vv IS TAKING THE NEWSUBSTRING ARRAY AND 
		// REFINING IT DOWN INTO AN ARRAY OF OBJECTS THAT REFLECT
		// THE NAMES OF EACH FONT WITHIN THE ORIGINAL URL
		
			for (var i=1; i < newSubstringArray.length; i++) {
				var	theSubstringArray = newSubstringArray[i];		
					if (newSubstringArray[i.length -1] === "&" || "") {
						var theSubstringArraySplice =	theSubstringArray.splice(-1, 1)
						nameArray.push(theSubstringArraySplice)
						}
//				console.log("THIS IS THE SUBSTRING ARRAY: " + theSubstringArray);
					if(theSubstringArray.indexOf(":") > -1) {
						var	newSubstringArraySplit = theSubstringArray.split(":");
						var newSubstringArraySplitShift =	newSubstringArraySplit.shift();
						nameArray.push(newSubstringArraySplitShift)
//					console.log("NEW ARRAY: "+ newSubstringArraySplitShift);
						} else {
								var theSubstringAltSplit = theSubstringArray.split("&")
								theSubstringAltSplit.pop()
								var toString =	theSubstringAltSplit.toString()
								nameArray.push(toString)
							}	
//				console.log("THE ULTIMATE SUBSTRING ARRAY: " + theSubstringArray)
				console.log("THIS IS THE NAME ARRAY: " + nameArray)
			}
		
//================================================
		// vv THIS FUNCTION vv IS TAKING THE ARRAY OF OBJECTS FROM 
		// THE ABOVE FUNCTION, AND IT IS TURNING IT INTO A STRING
		// SEPERATED BY SPACES AND COMMAS.
		
		for (var e=0; e < nameArray.length; e++) {
		//	var join = ''
			if (nameArray[e].indexOf("+") > -1){
				var split = nameArray[e].split("+");
				var join = split.join(" ");
				console.log("THIS IS JOIN: " + join)
				finalNameArray.push(join);
			}
		var joined = finalNameArray.join(", ")
		
			console.log(joined);
		}
	//	console.log(finalNameArray);
		
		

//	var fontSubstring = formData.url.substring(
//				formData.url.indexOf("family=") + 7,
//				formData.url.lastIndexOf("&")
//			)
//			var fontNameSplit = fontSubstring.split(":");
//				fontNameSplit.pop();	
//			var	fontNameSplitJoin = fontNameSplit.join();		
//			var fontNameSplit2 = fontNameSplitJoin.split("+");
//			var fontNameSplitJoin2 = fontNameSplit2.join(" ");
		
//			console.log("this is fontNameSPlit" + fontNameSplitJoin2);
//			console.log("this is the url:" + formData.url)
			
	//	 newName = fontNameSplitJoin2;

		//	console.log("font-namesplit: " + fontNameSplit);	
		//	console.log("font-namesplitJoin: " + fontNameSplitJoin);
		//	console.log("font-namesplit2: " + fontNameSplit2);
		//	console.log("font-namesplitJoin2: " + fontNameSplitJoin2);
		
	//	  newName = fontNameSplitJoin2
		
		c.server.get({
			action: 'importUrl',
			formData: formData,
			newName: newName
		}).then(function(r){
			c.data.portals.unshift(r.data.importUrl);
			c.data.portalID = r.data.portalID;
			
		})
	}
}
	]]></client_script>
        <controller_as>c</controller_as>
        <css>.main-container {
	display:flex;
	flex-direction: row;
	width: 600px;
  color: #454547;
}
.main-form-container {
  display: flex;
  justify-content: center;
  align-items: start;
  flex-direction: column;
	padding: 35px;
  background-image: url("sab_left_1.png");
	background-position: center;
	background-size:cover;
	flex: 1;
}
.right-container {
  background-image: url("sab_right_2.png");
  background-position: center;
	background-size:cover;
  padding: 35px;
	flex:2;
}
.title-container {

	display: flex;
 // justify-content: center;
	align-items: center;
  flex-direction: column;
}

.main-title {
  font-size:20px;
  font-familiy: Sora, sans-serif;
  margin-bottom: 0px;
  padding:0px;
  
}

.sub-title {
  display: flex;
  justify-content: center;
  font-size: 12px;
  margin: 15 0 15 15;
  padding: 0px;
}

.form-container {
  display: flex;
//  justify-content: space-evenly;
//	align-items: space-evenly;
  flex-direction: column;
}

.url-input-form {
  justify-content: space-evenly;
  display: flex;
	align-items: space-evenly;
  flex-direction: column;
}

.url-input-label {
  font-size: 13px;
  margin: 0;
}

.url-input {
	height: 20px;
}

.portal-input-label {
  font-size: 13px;
}

.portal-input {
	height: 20px;

}

.portal-input-option {

}

.submit-button {
  margin: 10px;
}

</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>webfont_url_dep</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>WebFont_url_dep</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

	//

	
	data.portals = [];

		var allThePortalsGR = new GlideRecord("sp_portal");
		allThePortalsGR.orderByDesc("sys_created_on");
		allThePortalsGR.query();
	

		while (allThePortalsGR.next()){
		console.log('made it to while!');

			var portalObj = {};
			
			portalObj.sys_id = allThePortalsGR.getUniqueValue();
			portalObj.theme = allThePortalsGR.theme + '';
			portalObj.title = allThePortalsGR.getValue("title");
//			portalObj.cssDep = portalObj.title.getValue("m2m_sp_theme_css_include");
			
			data.portals.push(portalObj);
			
	}
	
	if(input){
		if(input.action === 'importUrl'){
			
			var inputUrl = input.formData.url;
			var name = input.formData.portalName;
			var portalID = data.id;
			var theme = input.formData.portal.theme;
			var newUrlName = input.newName;
			
			console.log('theme:' + theme);
			console.log(JSON.stringify(input));
			console.log(inputUrl);
			console.log("thisIsNewName: " + newUrlName);

			
//			var spIncludeGR = new GlideRecord('sp_css_include');
//				spIncludeGR.initialize();
//				spIncludeGR.name = newUrlName + " (Google Web Font)" ;
//				spIncludeGR.url = inputUrl;
//				spIncludeGR.source = inputUrl;
//				var spIncludeGRID = spIncludeGR.insert();
				
			
//			var m2mThemeInclude = new GlideRecord('m2m_sp_theme_css_include');
//				m2mThemeInclude.initialize();
//				m2mThemeInclude.sp_css_include = spIncludeGRID;
//				m2mThemeInclude.sp_theme = theme;
//				m2mThemeInclude.url = inputUrl;
//				m2mThemeInclude.order = 10;
//				var m2mThemeIncludeID = m2mThemeInclude.insert();
			
			
			
			//---------------------------
			//create new theme if the portal doesn't already have one-------
	//		if (!theme) {

	//		var spThemeGR = new GlideRecord('sp_theme');
	//				spThemeGR.initialize();
	//			  spThemeGR.css_includes = spIncludeGRID;
	//				spThemeGR.name = "New Theme: "+ newUrlName;
	//				spThemeGR.update();
	//				var spThemeGRID = spThemeGR.insert();
			
		
	//				m2mThemeIncludeID();
				
				
	//			m2mThemeIncludeID = new GlideRecord('m2m_sp_theme_css_include');
	//			m2mThemeInclude.initialize();
	//			m2mThemeInclude.sp_css_include = spIncludeGRID;
	//			m2mThemeInclude.sp_theme = theme;
	//			m2mThemeInclude.url = inputUrl;
	//			m2mThemeInclude.order = 10;
	//		}
			// ---------------------
			
		

		}
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-08-18 17:20:13</sys_created_on>
        <sys_id>07d9dbad2f823010ec275e072799b616</sys_id>
        <sys_mod_count>874</sys_mod_count>
        <sys_name>WebFont_url_dep</sys_name>
        <sys_package display_value="import_url_css_dep" source="x_669416_imp_url">2d0f6d952f023010ec275e072799b632</sys_package>
        <sys_policy/>
        <sys_scope display_value="import_url_css_dep">2d0f6d952f023010ec275e072799b632</sys_scope>
        <sys_update_name>sp_widget_07d9dbad2f823010ec275e072799b616</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-09-09 21:44:28</sys_updated_on>
        <template><![CDATA[<div class="main-container">
  <div class="main-form-container">
  <div class="title-container">
    <h1 class="main-title" >
    Webfont Quick Add
  </h1>
  	<h2 class="sub-title">
    Quickly and swiftly add a webfont to your portal here! 
    </h2>
  </div>
  <div class="form-container">
    <form class="url-input-form" ng-submit="c.importUrl(c.formData)">
    <label class="url-input-label">
      Url:
    </label>
      <input class="url-input" type="text-field" ng-model="c.formData.url">
     <label class="portal-input-label">
      Portal:
      </label>
      <select class="portal-input" ng-options="portal as portal.title for portal in data.portals" ng-model="c.formData.portal" value="{{portal}}">
 <option class="portal-input-option" value="" >- s e l e c t - p o r t a l -</option>
      </select>
      <button type="submit" class="submit-button">
        s u b m i t
      </button>  
    </form>
  </div>
<!--  <div class="css-dependency-reveal-container">
    <div class="dependency-card" ng-repeat="dep in portal.cssDep track by $index">
      <p>
        {{dep}}
      </p>
    </div>
  </div> -->
  <!--- POTENTIALLY SHOW THE USER WHAT OTHER CSS DEPENDENCIES ARE ON THIS THEME!--->
</div>
<div class="right-container">
  
  </div>
  </div>]]></template>
    </sp_widget>
</record_update>
